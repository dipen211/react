[{"G:\\Company\\React_Typescript\\tscapp\\src\\App.tsx":"1","G:\\Company\\React_Typescript\\tscapp\\src\\reportWebVitals.ts":"2","G:\\Company\\React_Typescript\\tscapp\\src\\index.tsx":"3","G:\\Company\\React_Typescript\\tscapp\\src\\header\\navbar.tsx":"4","G:\\Company\\React_Typescript\\tscapp\\src\\translations\\config.tsx":"5","G:\\Company\\React_Typescript\\tscapp\\src\\translations\\en.tsx":"6","G:\\Company\\React_Typescript\\tscapp\\src\\translations\\chiness.tsx":"7","G:\\Company\\React_Typescript\\tscapp\\src\\pages\\Employee\\Create.tsx":"8","G:\\Company\\React_Typescript\\tscapp\\src\\pages\\Employee\\Edit.tsx":"9","G:\\Company\\React_Typescript\\tscapp\\src\\pages\\Employees.tsx":"10","G:\\Company\\React_Typescript\\tscapp\\src\\translations\\i18n.tsx":"11","G:\\Company\\React_Typescript\\tscapp\\src\\LanguageSelector\\LanguageSelector.tsx":"12","G:\\Company\\React_Typescript\\tscapp\\src\\component\\popup.tsx":"13","G:\\Company\\React_Typescript\\tscapp\\src\\component\\select.tsx":"14"},{"size":818,"mtime":1606278495417,"results":"15","hashOfConfig":"16"},{"size":425,"mtime":499162500000,"results":"17","hashOfConfig":"16"},{"size":277,"mtime":1606459028411,"results":"18","hashOfConfig":"16"},{"size":784,"mtime":1606646578064,"results":"19","hashOfConfig":"16"},{"size":667,"mtime":1606478239065,"results":"20","hashOfConfig":"16"},{"size":64,"mtime":1606467536064,"results":"21","hashOfConfig":"16"},{"size":71,"mtime":1606477592987,"results":"22","hashOfConfig":"16"},{"size":6047,"mtime":1606644950521,"results":"23","hashOfConfig":"16"},{"size":6873,"mtime":1606644984397,"results":"24","hashOfConfig":"16"},{"size":4368,"mtime":1606645553362,"results":"25","hashOfConfig":"16"},{"size":580,"mtime":1606640806906,"results":"26","hashOfConfig":"16"},{"size":606,"mtime":1606640994480,"results":"27","hashOfConfig":"16"},{"size":2951,"mtime":1606644368311,"results":"28","hashOfConfig":"16"},{"size":316,"mtime":1606644370450,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ahtkck",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"G:\\Company\\React_Typescript\\tscapp\\src\\App.tsx",[],"G:\\Company\\React_Typescript\\tscapp\\src\\reportWebVitals.ts",[],"G:\\Company\\React_Typescript\\tscapp\\src\\index.tsx",[],["61","62"],"G:\\Company\\React_Typescript\\tscapp\\src\\header\\navbar.tsx",[],"G:\\Company\\React_Typescript\\tscapp\\src\\translations\\config.tsx",[],"G:\\Company\\React_Typescript\\tscapp\\src\\translations\\en.tsx",["63"],"export default {\r\n  hello: \"Hello\",\r\n  thankyou: \"Thank you\"\r\n};","G:\\Company\\React_Typescript\\tscapp\\src\\translations\\chiness.tsx",["64"],"G:\\Company\\React_Typescript\\tscapp\\src\\pages\\Employee\\Create.tsx",["65"],"G:\\Company\\React_Typescript\\tscapp\\src\\pages\\Employee\\Edit.tsx",["66","67"],"import * as React from 'react';\r\nimport axios from 'axios';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport { Formik, Form, ErrorMessage, Field } from 'formik';\r\nimport ValidationFormSchema from '../../validationSchema/ValidationFormSchema';\r\nimport { withTranslation } from 'react-i18next';\r\nimport i18n from '../../translations/i18n';\r\n\r\nexport interface IValues {\r\n    [key: string]: any;\r\n}\r\nexport interface IFormState {\r\n    id: number,\r\n    employee: any;\r\n    values: IValues[];\r\n    submitSuccess: boolean;\r\n    loading: boolean;\r\n}\r\nclass EditEmployee extends React.Component<RouteComponentProps<any>, IFormState> {\r\n    constructor(props: RouteComponentProps) {\r\n        super(props);\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            employee: {},\r\n            values: [],\r\n            loading: false,\r\n            submitSuccess: false,\r\n        }\r\n    }\r\n    public componentDidMount(): void {\r\n        axios.get(`http://localhost:5000/employees/${this.state.id}`).then(data => {\r\n            this.setState({ employee: data.data });\r\n        })\r\n    }\r\n    private processFormSubmission = async (e: React.FormEvent<HTMLFormElement>): Promise<void> => {\r\n        e.preventDefault();\r\n        this.setState({ loading: true });\r\n        axios.patch(`http://localhost:5000/employees/${this.state.id}`, this.state.values).then(data => {\r\n            this.setState({ submitSuccess: true, loading: false })\r\n            setTimeout(() => {\r\n                this.props.history.push('/');\r\n            }, 1500)\r\n        })\r\n    }\r\n    private setValues = (values: IValues) => {\r\n        this.setState({ values: { ...this.state.values, ...values } });\r\n    }\r\n    private handleInputChanges = (e: React.FormEvent<HTMLInputElement>) => {\r\n        e.preventDefault();\r\n        this.setValues({ [e.currentTarget.id]: e.currentTarget.value })\r\n    }\r\n    public render() {\r\n        const { submitSuccess, loading } = this.state;\r\n        return (\r\n            <>\r\n                {i18n.t(\"hello\")}\r\n                <div className={\"col-md-12 form-wrapper\"}>\r\n                    <h1> Employee Details Edit</h1>\r\n                    {!submitSuccess && (\r\n                        <div className=\"alert alert-info\" role=\"alert\">\r\n                            Fill the form below to edit Employee\r\n                        </div>\r\n                    )}\r\n                    {submitSuccess && (\r\n                        <div className=\"alert alert-info\" role=\"alert\">\r\n                            Employee's details has been edited successfully\r\n                        </div>\r\n                    )}\r\n                    <Formik\r\n                        initialValues={this.state.employee}\r\n                        validationSchema={ValidationFormSchema}\r\n                        onSubmit={async => {\r\n                            this.setState({ loading: true });\r\n                            axios.patch(`http://localhost:5000/employees/${this.state.id}`, this.state.values).then(data => {\r\n                                this.setState({ submitSuccess: true, loading: false })\r\n                                setTimeout(() => {\r\n                                    this.props.history.push('/');\r\n                                }, 1500)\r\n                            })\r\n                        }}>\r\n\r\n                        {({ errors, touched }) => {\r\n                            return (\r\n                                <Form id={\"create-post-form\"} onSubmit={this.processFormSubmission} noValidate={true}>\r\n                                    <div className=\"form-group col-md-12\">\r\n                                        <label htmlFor=\"first_name\"> First Name </label>\r\n                                        <input type=\"text\" id=\"first_name\" defaultValue={this.state.employee.first_name} onChange={(e) => this.handleInputChanges(e)} name=\"first_name\" className={'form-control' + (errors.first_name && touched.first_name ? ' is-invalid' : '')} placeholder=\"Enter employee's first name\" />\r\n                                        <ErrorMessage name=\"first_name\" component=\"div\" className=\"invalid-feedback\" />\r\n                                    </div>\r\n                                    <div className=\"form-group col-md-12\">\r\n                                        <label htmlFor=\"last_name\"> Last Name </label>\r\n                                        <input type=\"text\" id=\"last_name\" defaultValue={this.state.employee.last_name} onChange={(e) => this.handleInputChanges(e)} name=\"last_name\" className={'form-control' + (errors.first_name && touched.first_name ? ' is-invalid' : '')} placeholder=\"Enter employee's last name\" />\r\n                                        <ErrorMessage name=\"last_name\" component=\"div\" className=\"invalid-feedback\" />\r\n                                    </div>\r\n                                    <div className=\"form-group col-md-12\">\r\n                                        <label htmlFor=\"email\"> Email </label>\r\n                                        <input type=\"email\" id=\"email\" defaultValue={this.state.employee.email} onChange={(e) => this.handleInputChanges(e)} name=\"email\" className={'form-control' + (errors.first_name && touched.first_name ? ' is-invalid' : '')} placeholder=\"Enter employee's email address\" />\r\n                                        <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\r\n                                    </div>\r\n                                    <div className=\"form-group col-md-12\">\r\n                                        <label htmlFor=\"password\"> Password </label>\r\n                                        <input type=\"password\" id=\"password\" defaultValue={this.state.employee.password} onChange={(e) => this.handleInputChanges(e)} name=\"password\" className={'form-control' + (errors.first_name && touched.first_name ? ' is-invalid' : '')} placeholder=\"Enter employee's password number\" />\r\n                                        <ErrorMessage name=\"password\" component=\"div\" className=\"invalid-feedback\" />\r\n                                    </div>\r\n                                    <div className=\"form-group col-md-4 pull-right\">\r\n                                        <button className=\"btn btn-success\" type=\"submit\">\r\n                                            Edit Employee </button>\r\n                                        {loading &&\r\n                                            <span className=\"fa fa-circle-o-notch fa-spin\" />\r\n                                        }\r\n                                    </div>\r\n                                </Form>\r\n                            );\r\n                        }}\r\n                    </Formik>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(EditEmployee);\r\n\r\n\r\n\r\n\r\n\r\n","G:\\Company\\React_Typescript\\tscapp\\src\\pages\\Employees.tsx",[],"G:\\Company\\React_Typescript\\tscapp\\src\\translations\\i18n.tsx",[],"G:\\Company\\React_Typescript\\tscapp\\src\\LanguageSelector\\LanguageSelector.tsx",[],"G:\\Company\\React_Typescript\\tscapp\\src\\component\\popup.tsx",[],"G:\\Company\\React_Typescript\\tscapp\\src\\component\\select.tsx",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":1,"column":1,"nodeType":"74","endLine":4,"endColumn":3},{"ruleId":"72","severity":1,"message":"73","line":1,"column":1,"nodeType":"74","endLine":4,"endColumn":5},{"ruleId":"75","severity":1,"message":"76","line":5,"column":10,"nodeType":"77","messageId":"78","endLine":5,"endColumn":25},{"ruleId":"75","severity":1,"message":"79","line":4,"column":38,"nodeType":"77","messageId":"78","endLine":4,"endColumn":43},{"ruleId":"75","severity":1,"message":"76","line":6,"column":10,"nodeType":"77","messageId":"78","endLine":6,"endColumn":25},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","@typescript-eslint/no-unused-vars","'withTranslation' is defined but never used.","Identifier","unusedVar","'Field' is defined but never used.","no-global-assign","no-unsafe-negation"]