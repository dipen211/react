// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EditEmployee should match the snapshot 1`] = `
<Fragment>
  <div
    className="col-md-12 form-wrapper"
  >
    <h1>
       
      Edit Employee
       
    </h1>
    <div
      className="alert alert-info"
      role="alert"
    >
      Fill the form below to edit Employee
    </div>
    <Formik
      initialValues={Object {}}
      onSubmit={[Function]}
      validationSchema={
        ObjectSchema {
          "_blacklist": RefSet {
            "list": Set {},
            "refs": Map {},
          },
          "_conditions": Array [],
          "_defaultDefault": [Function],
          "_deps": Array [],
          "_excludedEdges": Array [],
          "_exclusive": Object {},
          "_mutate": undefined,
          "_nodes": Array [
            "password",
            "email",
            "last_name",
            "first_name",
            "id",
          ],
          "_options": Object {
            "abortEarly": true,
            "recursive": true,
          },
          "_sortErrors": [Function],
          "_type": "object",
          "_typeError": [Function],
          "_whitelist": RefSet {
            "list": Set {},
            "refs": Map {},
          },
          "fields": Object {
            "email": StringSchema {
              "_blacklist": RefSet {
                "list": Set {},
                "refs": Map {},
              },
              "_conditions": Array [],
              "_deps": Array [],
              "_exclusive": Object {
                "email": false,
                "required": true,
              },
              "_mutate": undefined,
              "_options": Object {
                "abortEarly": true,
                "recursive": true,
              },
              "_type": "string",
              "_typeError": [Function],
              "_whitelist": RefSet {
                "list": Set {},
                "refs": Map {},
              },
              "tests": Array [
                [Function],
                [Function],
              ],
              "transforms": Array [
                [Function],
              ],
              "type": "string",
            },
            "first_name": StringSchema {
              "_blacklist": RefSet {
                "list": Set {},
                "refs": Map {},
              },
              "_conditions": Array [],
              "_deps": Array [],
              "_exclusive": Object {
                "required": true,
              },
              "_mutate": undefined,
              "_options": Object {
                "abortEarly": true,
                "recursive": true,
              },
              "_type": "string",
              "_typeError": [Function],
              "_whitelist": RefSet {
                "list": Set {},
                "refs": Map {},
              },
              "tests": Array [
                [Function],
              ],
              "transforms": Array [
                [Function],
              ],
              "type": "string",
            },
            "id": StringSchema {
              "_blacklist": RefSet {
                "list": Set {},
                "refs": Map {},
              },
              "_conditions": Array [],
              "_deps": Array [],
              "_exclusive": Object {
                "required": true,
              },
              "_mutate": undefined,
              "_options": Object {
                "abortEarly": true,
                "recursive": true,
              },
              "_type": "string",
              "_typeError": [Function],
              "_whitelist": RefSet {
                "list": Set {},
                "refs": Map {},
              },
              "tests": Array [
                [Function],
              ],
              "transforms": Array [
                [Function],
              ],
              "type": "string",
            },
            "last_name": StringSchema {
              "_blacklist": RefSet {
                "list": Set {},
                "refs": Map {},
              },
              "_conditions": Array [],
              "_deps": Array [],
              "_exclusive": Object {
                "required": true,
              },
              "_mutate": undefined,
              "_options": Object {
                "abortEarly": true,
                "recursive": true,
              },
              "_type": "string",
              "_typeError": [Function],
              "_whitelist": RefSet {
                "list": Set {},
                "refs": Map {},
              },
              "tests": Array [
                [Function],
              ],
              "transforms": Array [
                [Function],
              ],
              "type": "string",
            },
            "password": StringSchema {
              "_blacklist": RefSet {
                "list": Set {},
                "refs": Map {},
              },
              "_conditions": Array [],
              "_deps": Array [],
              "_exclusive": Object {
                "min": true,
                "required": true,
              },
              "_mutate": undefined,
              "_options": Object {
                "abortEarly": true,
                "recursive": true,
              },
              "_type": "string",
              "_typeError": [Function],
              "_whitelist": RefSet {
                "list": Set {},
                "refs": Map {},
              },
              "tests": Array [
                [Function],
                [Function],
              ],
              "transforms": Array [
                [Function],
              ],
              "type": "string",
            },
          },
          "tests": Array [],
          "transforms": Array [
            [Function],
          ],
          "type": "object",
        }
      }
    >
      <Component />
    </Formik>
  </div>
</Fragment>
`;
